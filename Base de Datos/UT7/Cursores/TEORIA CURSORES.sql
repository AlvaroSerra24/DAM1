--SET SERVEROUTPUT ON;
--SET VERIFY OFF;

/* DOS TIPOS DE CURSORES:
        1. IMPLÍCITOS (NO HYA QUE DECLARARLOS) --1 RESULTADO
        2. EXPLÍCITO (QUE SÍ HAY QUE DECLARARLOS) --VARIOS ELEMENTOS COMO RESULTADO
        
    EN AMBOS CASOS, USAMOS ATRIBUTOS QUE TIENEN LOS CURSORES:
    
    %FOUND : TRUE O FALSE DEPENDIENDO SEL RESULTADO DE LA EJECUCIÓN DE LA CONSULTA QUE GENERÓ EL CURSOR.
                        RESULTADO DE LA CONSULTA: DEPENDIENDO DE SI SE HA INSERTADO, MODIFICADO O BORRADO
                        ALGUN REGISTRO DE LA TABLA
    %NOTFOUND: LO CONTRARIO.
    %ISOPEN: DEVULEVE TRUE SI EL CURSOR ESTÁ ABIERTO.
    %ROWCOUNT: DEVULEVE EL NUMERO DE FILAS BORRADAS, MODIFICADAS O INSERTADAS*/
    
    -- CURSOSR IMPLÍCITO

    DECLARE
        E_SALARIO EMPLE.SALARIO%TYPE;
        CONT NUMBER(1):=0;
    BEGIN
        SELECT COUNT(EMP_NO) INTO CONT FROM EMPLE WHERE EMP_NO=7369;
        
        IF CONT >0 THEN
            SELECT SALARIO INTO E_SALARIO FROM EMPLE WHERE EMP_NO=7369;
            DBMS_OUTPUT.PUT_LINE('EL EMPLEADO GANA '||TO_CHAR(E_SALARIO));
        ELSE
            DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
        END IF;
    END;
    
    /* CURSOR IMPLICITO CON SENTENCIAS UPDATE, INSERT, DELETE */

DECLARE
BEGIN
    UPDATE EMPLE SET COMISION=NVL(COMISION,0)+100 
    WHERE SALARIO>=1500 AND SALARIO<=2000;
    DBMS_OUTPUT.PUT_LINE('SE MODIFICARON '||SQL%ROWCOUNT||' REGISTROS');
    INSERT INTO EMPLE VALUES ((SELECT MAX(EMP_NO)+1 FROM EMPLE), 
                               'AMOR','DIRECTOR', 8014, SYSDATE,
                               (SELECT MAX(SALARIO) FROM EMPLE),2000,
                               (SELECT MAX(DEPT_NO)FROM EMPLE));
    IF SQL%FOUND THEN                          
     DBMS_OUTPUT.PUT_LINE('INSERCIÓN REALIZADA');
    END IF;
    DELETE FROM EMPLE WHERE DEPT_NO=20;
    IF SQL%NOTFOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO SE HA BORRADO NINGÚN REGISTRO');
    ELSE
        DBMS_OUTPUT.PUT_LINE('SE HAN BORRADO '||SQL%ROWCOUNT||' REGISTROS');
    END IF;
    
END;

/*
CURSORES EXPLÍCITOS: SE USAN CUANDO LA CONSULTA DEVUELVE MÚLTIPLES REGISTROS
Y QUEREMOS PROCESAR LOS REGISTROS. SE DECLARA DE LA SIGUIENTE FORMA EN LA ZONA DE 
DECLARE:
            CURSOR C_EMP IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO FROM EMPLE;
 
PARA PODER PROCESAR UN CURSOR EXPLÍCITO, HAY QUE REALIZAR TRES OPERACIONES:
- ABRIR EL CURSOR --> OPEN CURSOR
            OPEN C_EMP;
            
- PROCESAR CADA REGISTRO --> FETCH
            FETCH INTO C_EMP_NO, C_APELLIDO, C_OFICIO; 
                   -- capturamos los campos de una fila y lo almacenaos en unas vrbles 
                      del mismo tipo que nos hemos declarado. 
                      
- CERRAR EL CURSOR --> CLOSE(CURSOR). 
            CLOSE C_EMP; --OBLIGATORIO, SI NO LO HACEMOS, DARÍA ERROR. 

TAMBIÉN PODRESMOS USAR LOS ATRIBUTOS VISTOS EN LOS IMPLÍCITOS COMO FOUND%, 
 ROWCOUNT%, ECT...*/
 
 /* EJEMPLO CURSOR EXPLÍCITO */
 
/* EJEMPLO 1: LISTAR EL NÚMERO DE EMPLEADO, EL APELLIDO, EL OFICIO Y EL SALARIO
   DEL DEPARTAMENTO DE CONTABILIDAD. LA INFORMACÍON SE DEBE MOSTRAR DE LA SIGUIENTE
   FORMA: 
   EMP_NO    *APELLIDOS    *OFICIO    *SALARIO 
*/

DECLARE
   -- DECLARAMOS EL CURSOR
   CURSOR C_EMP IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO FROM EMPLE; 
   REG C_EMP%ROWTYPE; -- NOS DECLARAMOS UNA VRBLE QUE CONTENGA CADA FILA DEL CURSOR. 

BEGIN
   OPEN C_EMP; -- ABRIR EL CURSOR
   -- RECORREMOS EL CURSOR CON UN LOOP
   LOOP
    FETCH C_EMP INTO REG;
    EXIT WHEN C_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(REG.EMP_NO||'    '||
                         '*'||REG.APELLIDO||'    '||
                         '*'||REG.OFICIO||'    '||
                         '*'||REG.SALARIO);
   END LOOP;
   CLOSE C_EMP; --CERRAR EL CURSOR. 
END;

/* SALE DESCOLOCADO. USAR LA FUNCIÓN RPAD PARA CONSEGUIR ALINEAR LOS CAMBIOS */

 DECLARE
   -- DECLARAMOS EL CURSOR
   CURSOR C_EMP IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO FROM EMPLE; 
   REG C_EMP%ROWTYPE; -- NOS DECLARAMOS UNA VRBLE QUE CONTENGA CADA FILA DEL CURSOR. 

BEGIN
   OPEN C_EMP; -- ABRIR EL CURSOR
   -- RECORREMOS EL CURSOR CON UN LOOP
   LOOP
    FETCH C_EMP INTO REG;
    EXIT WHEN C_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(RPAD(REG.EMP_NO,6,' ')||
                         '*'||RPAD(REG.APELLIDO,15,' ')||
                         '*'||RPAD(REG.OFICIO,15,' ')||
                         '*'||REG.SALARIO);
   END LOOP;
   CLOSE C_EMP; --CERRAR EL CURSOR. 
END;

/* PONER UNA CABECERA AL LISTADO:
   N_EMP      APELLIDOS     PERFIL       SALARIO
   =================================================== */
DECLARE
   -- DECLARAMOS EL CURSOR
   CURSOR C_EMP IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO FROM EMPLE; 
   REG C_EMP%ROWTYPE; -- NOS DECLARAMOS UNA VRBLE QUE CONTENGA CADA FILA DEL CURSOR. 

BEGIN
   DBMS_OUTPUT.PUT_LINE(RPAD(' N_EMP',10,' ')||
                         RPAD('APELLIDOS',17,' ')||
                         RPAD('OFICIO',13,' ')||
                         'SALARIO');
   DBMS_OUTPUT.PUT_LINE(RPAD('=',50,'='));
   OPEN C_EMP; -- ABRIR EL CURSOR
   -- RECORREMOS EL CURSOR CON UN LOOP
   LOOP
    FETCH C_EMP INTO REG;
    EXIT WHEN C_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(RPAD(REG.EMP_NO,8,' ')||
                         '*'||RPAD(REG.APELLIDO,15,' ')||
                         '*'||RPAD(REG.OFICIO,15,' ')||
                         '*'||REG.SALARIO);
   END LOOP;
   CLOSE C_EMP; --CERRAR EL CURSOR. 
END;

/* MOSTRAR SOLO LA INFORMACIÓN DE AQUELLOS EMPLEADOS QUE GANAN MENOS DE 2000 EUROS
   TENEMOS QUE DECLARAR "CURSORES CON PARÁMETROS" 
   
   CURSOR nombre_cursor [(parametro [, parametro] ...)] [RETURN tipo_devuelto] IS 
            sentencia_select;
    
   ESTA ES LA FORMA GENERAL DE DECLARAR UN CURSOR. LOS PARÁMETROS SON OPTATIVOS
   ASÍ COMO EL VALOR DE RETURN. 
   
   */
DECLARE
   -- DECLARAMOS EL CURSOR CON PARÁMETROS DE LA SIGUIENTE FORMA:
   CURSOR C_EMP(SAL EMPLE.SALARIO%TYPE) IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO 
             FROM EMPLE
             WHERE SALARIO<SAL;  -- IMPONEMOS LA CONDICION DEL SALARIO
   REG C_EMP%ROWTYPE; -- NOS DECLARAMOS UNA VRBLE QUE CONTENGA CADA FILA DEL CURSOR. 

BEGIN
   DBMS_OUTPUT.PUT_LINE(RPAD(' N_EMP',10,' ')||
                         RPAD('APELLIDOS',17,' ')||
                         RPAD('OFICIO',13,' ')||
                         'SALARIO');
   DBMS_OUTPUT.PUT_LINE(RPAD('=',50,'='));
   OPEN C_EMP(2000); -- ABRIR EL CURSOR CON EL VALOR DE SALARIO
   -- RECORREMOS EL CURSOR CON UN LOOP
   LOOP
    FETCH C_EMP INTO REG;
    EXIT WHEN C_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(RPAD(REG.EMP_NO,8,' ')||
                         '*'||RPAD(REG.APELLIDO,15,' ')||
                         '*'||RPAD(REG.OFICIO,15,' ')||
                         '*'||REG.SALARIO);
   END LOOP;
   CLOSE C_EMP; --CERRAR EL CURSOR. 
END;

/* IDEM EJERCICIO, INDICANDO AL FINAL DEL LISTADO EL TOTAL DE TODOS LOS SALARIOS DE 
LOS EMPLEADOS */
-- VAMOS A NECESITAR UNA VRBLE QUE ACUMULE EL VALOR DE LOS SALARIOS. 
DECLARE
   CURSOR C_EMP(SAL EMPLE.SALARIO%TYPE) IS
             SELECT EMP_NO, APELLIDO, OFICIO, SALARIO 
             FROM EMPLE
             WHERE SALARIO<SAL;  
   REG C_EMP%ROWTYPE; 
   TOTAL_SAL NUMBER(8):=0; --VRBLE ACUMULATIVA SALARIOS
BEGIN
   DBMS_OUTPUT.PUT_LINE(RPAD(' N_EMP',10,' ')||
                         RPAD('APELLIDOS',17,' ')||
                         RPAD('OFICIO',13,' ')||
                         'SALARIO');
   DBMS_OUTPUT.PUT_LINE(RPAD('=',50,'='));
   OPEN C_EMP(2000); 
   
   LOOP
    FETCH C_EMP INTO REG;
    EXIT WHEN C_EMP%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(RPAD(REG.EMP_NO,8,' ')||
                         '*'||RPAD(REG.APELLIDO,15,' ')||
                         '*'||RPAD(REG.OFICIO,15,' ')||
                         '*'||REG.SALARIO);
    TOTAL_SAL:=TOTAL_SAL+REG.SALARIO; -- ACUMULAR EL VALOR DE LOS SALARIOS EN EL 
                                    -- EL BUCLE
   END LOOP;
   CLOSE C_EMP; --CERRAR EL CURSOR. 
   DBMS_OUTPUT.PUT_LINE(RPAD('-',50,'-'));  
   DBMS_OUTPUT.PUT_LINE((RPAD('TOTAL SALARIOS',40,' ')||TOTAL_SAL));
END;