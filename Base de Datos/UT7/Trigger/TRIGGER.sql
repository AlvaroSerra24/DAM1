SET SERVEROUTPUT ON
SET VERIFY OFF

DROP TABLE TEM_DEPART;
CREATE TABLE TEM_DEPART
(INFORMACION VARCHAR2(150));

--CREACIÓN DEL TRIGGER ALMACENADO:
CREATE OR REPLACE TRIGGER AUDIT_INSERT_DEPART AFTER INSERT ON DEPART
BEGIN
INSERT INTO TEM_DEPART VALUES 
('SE HA INSERTADO UN REGISTRO, USUARIO: '||USER||' , FECHA: '||TO_CHAR(SYSDATE));
END;

--PRUEBA:
INSERT INTO DEPART VALUES (12, '11111', '1111');

INSERT INTO DEPART SELECT * FROM DEPART;

SELECT * FROM TEM_DEPART;

CREATE OR REPLACE TRIGGER AUDIT_INSERT2_DEPART AFTER INSERT ON DEPART FOR EACH ROW
BEGIN
INSERT INTO TEM_DEPART VALUES ('SE HA INSERTADO UN REGISTRO, USUARIO: '||USER||' ,
FECHA: '||TO_CHAR(SYSDATE)|| '. EL NÚMERO DEPARTAMENTO INSERTADO ES: '||
TO_CHAR(:NEW.DEPT_NO)|| ', Y EL NOMBRE ES : '||:NEW.DNOMBRE);
END;



INSERT INTO DEPART VALUES (22, '22222', '2222');

INSERT INTO DEPART SELECT * FROM DEPART;


CREATE OR REPLACE TRIGGER INSER_EMPLE BEFORE INSERT ON EMPLE FOR EACH ROW
DECLARE
    D NUMBER(2);
BEGIN
    IF :NEW.COMISION IS NULL THEN
            :NEW.COMISION := 100;
    END IF;
    SELECT DEPT_NO INTO D FROM DEPART WHERE DEPT_NO=:NEW.DEPT_NO;
    DBMS_OUTPUT.PUT_LINE('REG OK.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
                    :NEW.DEPT_NO:=10;
    DBMS_OUTPUT.PUT_LINE('DEP ASIGNADO 10.');  
    WHEN TOO_MANY_ROWS THEN
            NULL;
END;

INSERT INTO EMPLE VALUES(1,'11111','OFI', 1, SYSDATE, 111,NULL,33);

SELECT * FROM EMPLE;

CREATE OR REPLACE TRIGGER OFIVENDEDOR BEFORE UPDATE OF OFICIO ON EMPLE FOR EACH ROW
WHEN (UPPER(NEW.OFICIO) = 'VENDEDOR')
BEGIN
        IF :NEW.OFICIO='VENDEDOR' THEN
                    :NEW.COMISION:=200;
        END IF;
END;
--comprobacion:
SELECT * FROM EMPLE;
UPDATE EMPLE SET OFICIO = 'VENDEDOR' WHERE EMP_NO = 1;
SELECT * FROM EMPLE;
UPDATE EMPLE SET OFICIO = 'VENDEDOR' WHERE EMP_NO = 1133;


CREATE OR REPLACE TRIGGER INSEREMPLE AFTER INSERT ON EMPLE
BEGIN
DBMS_OUTPUT.PUT_LINE('REG EMPLE INSERTADO');
END;

INSERT INTO EMPLE ( EMP_NO, APELLIDO, OFICIO, DIR, FECHA_ALT, SALARIO, COMISION, DEPT_NO )
VALUES ( 1122, 'RAMOS', 'VENDEDOR', 1, SYSDATE, 1000, 1000, 10);
SELECT * FROM EMPLE;
INSERT INTO EMPLE SELECT * FROM EMPLE;
SELECT * FROM EMPLE;

CREATE OR REPLACE TRIGGER INSEREMPLE AFTER INSERT ON EMPLE FOR EACH ROW
BEGIN
DBMS_OUTPUT.PUT_LINE('REG EMPLE INSERTADO');
DBMS_OUTPUT.PUT_LINE('NUMERO EMPLE:'||:NEW.EMP_NO);
DBMS_OUTPUT.PUT_LINE('APELLIDO: '||:NEW.APELLIDO);
DBMS_OUTPUT.PUT_LINE('OFICIO: '||:NEW.OFICIO);
DBMS_OUTPUT.PUT_LINE('FECHA_ALTA: '||:NEW.FECHA_ALT);
DBMS_OUTPUT.PUT_LINE('SALARIO :'||:NEW.SALARIO);
DBMS_OUTPUT.PUT_LINE('NUM DEPART :'||:NEW.DEPT_NO);
END;

INSERT INTO EMPLE ( EMP_NO, APELLIDO, OFICIO, DIR, FECHA_ALT, SALARIO,
COMISION, DEPT_NO )
VALUES ( 1133, 'RAMOS', 'VENDEDOR', 1, SYSDATE, 1000, 1000, 10);
INSERT INTO EMPLE SELECT * FROM EMPLE;
SELECT * FROM EMPLE;



DROP TABLE TEMP;
CREATE TABLE TEMP
(EMPLE VARCHAR2(15),
SUCESO VARCHAR2(20),
SUELDO_ANTE NUMBER(9,2),
SUELDO_NUE NUMBER(9,2));
CREATE OR REPLACE TRIGGER AUDIT_SUBI_SUELDO AFTER UPDATE OF SALARIO ON EMPLE
FOR EACH ROW
WHEN ((NEW.SALARIO - OLD.SALARIO) > 100)
BEGIN
INSERT INTO TEMP VALUES (:OLD.APELLIDO,'SUBIDA SUELDO', :OLD.SALARIO, :NEW.SALARIO);
END;

UPDATE EMPLE SET SALARIO=SALARIO+101 WHERE DEPT_NO=10;

SELECT * FROM TEMP;

CREATE TABLE AUDITA_DEPART
(DEPT_NO NUMBER(2),
OPERACION VARCHAR2(1),
NOMBRE VARCHAR2(14),
USUARIO VARCHAR2(14),
FECHA DATE );

CREATE OR REPLACE TRIGGER AUDITDEPART AFTER INSERT OR UPDATE OR DELETE ON DEPART FOR
EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO AUDITA_DEPART VALUES (:NEW.DEPT_NO, 'I', :NEW.DNOMBRE, USER, SYSDATE);
    ELSIF DELETING THEN
        INSERT INTO AUDITA_DEPART VALUES (:OLD.DEPT_NO, 'D', :OLD.DNOMBRE, USER, SYSDATE);
    ELSE
-- UPDATING
        INSERT INTO AUDITA_DEPART VALUES (:OLD.DEPT_NO, 'U', :OLD.DNOMBRE, USER, SYSDATE);
    END IF;
END;

INSERT INTO DEPART (DEPT_NO, DNOMBRE, LOC)
VALUES ( 60,'DEP60','TALAVERA' );
SELECT * FROM AUDITA_DEPART;

DELETE DEPART WHERE DEPT_NO = 10;
SELECT * FROM AUDITA_DEPART;

UPDATE DEPART SET DNOMBRE = 'NUEVO' WHERE DEPT_NO = 20;
SELECT * FROM AUDITA_DEPART;


CREATE OR REPLACE TRIGGER VERCAMBIOSDEPAR AFTER UPDATE ON DEPART FOR EACH ROW
BEGIN
IF :NEW.DEPT_NO != :OLD.DEPT_NO THEN
DBMS_OUTPUT.PUT_LINE ('NÚMERO DEPAR CAMBIA:'||
' NUEVO =' || :NEW.DEPT_NO ||', ANTIGUO = '|| :OLD.DEPT_NO);
END IF;
IF :NEW.DNOMBRE != :OLD.DNOMBRE THEN
DBMS_OUTPUT.PUT_LINE ('NOMBRE DEP CAMBIA:'||
' NUEVO =' || :NEW.DNOMBRE ||', ANTIGUO = '|| :OLD.DNOMBRE);
END IF;
IF :NEW.LOC != :OLD.LOC THEN
DBMS_OUTPUT.PUT_LINE ('LOCALIDAD DEP CAMBIA:'||
' NUEVO =' || :NEW.LOC ||', ANTIGUO = '|| :OLD.LOC);
END IF;
END;

UPDATE DEPART SET DNOMBRE='CAMBIO' WHERE DEPT_NO=40;
UPDATE DEPART SET DNOMBRE='NUEVONOM', LOC='NUEVA' WHERE DEPT_NO=40;
UPDATE DEPART SET DNOMBRE='NUEV3', LOC='NUEVA3', DEPT_NO = 81 WHERE DEPT_NO=40;

