SET SERVEROUTPUT ON
SET VERIFY OFF
/*EJ 1*/
/*FUNTION RAISE_APPLICATION_ERROR (ERROR_NUMBER, MESSAGE, [(TRUE|FALSE)])
        ERROR_NUMBER ENTRE -20000 Y -20999
        MESSAGE 'CADENA ASOCIADA DEL ERROR'
*/

CREATE OR REPLACE TRIGGER COMPRUEBA_DPTO 
        BEFORE INSERT ON DEPART FOR EACH ROW
BEGIN
        IF :NEW.DEPT_NO<0 THEN
                
                RAISE_APPLICATION_ERROR(-20000, 'INSERCION ABORTADA: EL DEPARTAMENTO NO PUEDE SER NEGATIVO');         
        END IF;
        
        
END;

INSERT INTO DEPART VALUES (60, 'NOMBRE 60', 'TALAVERA');
INSERT INTO DEPART VALUES (-60, 'NOMBRE -60', 'TALAVERA');

CREATE OR REPLACE PROCEDURE INSERTA_DPTO (NUM_DEPT DEPART.DEPT_NO%TYPE,
                                                                                                        NOM_DEPT DEPART.DNOMBRE%TYPE,
                                                                                                        LOC_DEPT DEPART.LOC%TYPE) IS
BEGIN
    INSERT INTO DEPART VALUES(NUM_DEPT, NOM_DEPT, LOC_DEPT);
    
    EXCEPTION
            WHEN OTHERS THEN
                    IF (SQLCODE=-20000) THEN
                        DBMS_OUTPUT.PUT_LINE('EL DPTO ES NEGATIVO');
                    END IF;
END;

EXEC INSERTA_DPTO(-20,'DEPART 20','TALAVERA');

/*EJ 2*/
CREATE OR REPLACE TRIGGER COMPRUEBA_OFICIO BEFORE INSERT ON EMPLE FOR EACH ROW
DECLARE
        CONT NUMBER(3):=0;
BEGIN
SELECT COUNT(*) INTO CONT FROM EMPLE WHERE UPPER(TRIM(OFICIO)) = UPPER(TRIM(:NEW.OFICIO));

IF CONT=0 THEN
    RAISE_APPLICATION_ERROR(-20001,'EL OFICIO NO ES CORRECTO');
END IF;
END;

INSERT INTO EMPLE(EMP_NO, APELLIDO, OFICIO, DEPT_NO) VALUES (900,'AMOR','PROFESOR',10);
INSERT INTO EMPLE(EMP_NO, APELLIDO, OFICIO, DEPT_NO) VALUES (800,'AMOR','DIRECTOR',10);

BEGIN
    INSERT INTO EMPLE(EMP_NO, APELLIDO, OFICIO, DEPT_NO) VALUES (900,'AMOR','PROFESOR',10);
    
    EXCEPTION
    WHEN OTHERS THEN
    IF SQLCODE=-20001 THEN
        DBMS_OUTPUT.PUT_LINE('EL OFICIO NO ES VÁLIDO');
    END IF;
END;

--MISMO EJERCICIO 

CREATE OR REPLACE TRIGGER COMPRUEBA_OFICIO_2 BEFORE INSERT ON EMPLE FOR EACH ROW
DECLARE
        REG EMPLE.OFICIO%TYPE:=NULL;
BEGIN
SELECT OFICIO INTO REG FROM EMPLE WHERE UPPER(TRIM(OFICIO)) = UPPER(TRIM(:NEW.OFICIO));
EXCEPTION 
WHEN NO_DATA_FOUND THEN
    RAISE_APPLICATION_ERROR(-20001,'EL OFICIO NO ES CORRECTO');
END;

/*EJ 3*/
CREATE OR REPLACE TRIGGER NO_BORRAR_PRESIDENTE BEFORE DELETE ON EMPLE FOR EACH ROW
BEGIN
        IF UPPER(TRIM(:OLD.OFICIO))='PRESIDENTE' THEN
            RAISE_APPLICATION_ERROR(-20002, 'NO SE PUEDE BORRAR AL PRESIDENTE');
        END IF;
END;

DELETE FROM EMPLE WHERE OFICIO LIKE 'PRESIDENTE';
DELETE FROM EMPLE WHERE EMP_NO = 7839;

BEGIN
        DELETE FROM EMPLE WHERE EMP_NO = 7839;
        
        EXCEPTION
            WHEN OTHERS THEN
                IF SQLCODE=-20002 THEN
                    DBMS_OUTPUT.PUT_LINE('NO SE PUEDE BORRAR AL PRESIDENTE');
                END IF;
END;
--MISMO EJERCICIO PLANTEAMIENTO AFTER
CREATE OR REPLACE TRIGGER NO_BORRAR_PRESIDENTE_AFTER AFTER DELETE ON EMPLE FOR EACH ROW
BEGIN
        IF UPPER(TRIM(:OLD.OFICIO))='PRESIDENTE' THEN
            RAISE_APPLICATION_ERROR(-20002, 'NO SE PUEDE BORRAR AL PRESIDENTE');
        END IF;
END;

DELETE FROM EMPLE WHERE OFICIO LIKE 'PRESIDENTE';
SELECT COUNT(*) FROM EMPLE WHERE OFICIO LIKE 'PRESIDENTE';
/*EJ 4*/
CREATE OR REPLACE TRIGGER IMPEDIR_MODI_APE_NUM_SAL BEFORE 
                        UPDATE OF APELLIDO, EMP_NO, SALARIO ON EMPLE FOR EACH ROW
BEGIN
        --APELLIDO
        IF UPDATING('APELLIDO') THEN
            RAISE_APPLICATION_ERROR(-20003,'NO SE PUEDE MODIFICAR EL APELLIDO');
        END IF;
        --EMP_NO
        IF UPDATING('EMP_NO') THEN
            RAISE_APPLICATION_ERROR(-20004,'NO SE PUEDE MODIFICAR EL NÚMERO DE EMPLEADO');
        END IF;
        --SUBIDA SUELDO
        IF :OLD.SALARIO*1.1 < :NEW.SALARIO THEN
            RAISE_APPLICATION_ERROR(-20005,'NO SE PUEDE SUBIR EL SUELDO MÁS DE UN 10%');
        END IF;
END;

UPDATE EMPLE SET APELLIDO='MODIFICADO' WHERE APELLIDO='AMOR';
UPDATE EMPLE SET EMP_NO=8000 WHERE APELLIDO='AMOR';
UPDATE EMPLE SET SALARIO=SALARIO*1.2 WHERE APELLIDO='AMOR';

/*EJ 5*/
ALTER TABLE DEPART ADD NUM_EMPLE NUMBER(2) DEFAULT 0 NOT NULL;
/*TRIGGER A NIVEL DE TABLA. ATNETE UNA OPERACIÓN DE INSER, UPDATE O DELETE, VA A CONTAR*/
CREATE OR REPLACE TRIGGER ACTUALIZA_NUM_EMPLE AFTER DELETE OR INSERT OR UPDATE ON EMPLE
BEGIN
        UPDATE DEPART D SET NUM_EMPLE=
                (SELECT COUNT(*) FROM EMPLE
                WHERE DEPT_NO=D.DEPT_NO);
END;

INSERT INTO EMPLE(EMP_NO, APELLIDO, OFICIO, DEPT_NO) VALUES (9000,'AMOR','VENDEDOR',10);
DELETE EMPLE WHERE EMP_NO=9000;