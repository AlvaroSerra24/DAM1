package examen;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Scanner;

public class Guia extends Persona {
	private String titulacion;
	private int añosExperiencia;
	private ArrayList<Turista> turistas;
	
	public Guia(String id, String nombre, String apellidos, String titulacion, int añosExperiencia,
			ArrayList<Turista> turistas) {
		super(id, nombre, apellidos);
		this.titulacion = titulacion;
		this.añosExperiencia = añosExperiencia;
		this.turistas = turistas;
	}
	
	public Guia(String id, String nombre, String apellidos, String titulacion, int añosExperiencia) {
		super(id, nombre, apellidos);
		this.titulacion = titulacion;
		this.añosExperiencia = añosExperiencia;
		this.turistas = new ArrayList<Turista>();
	}
	
	public Guia() {
		super();
		this.titulacion = "";
		this.añosExperiencia = 0;
		this.turistas = new ArrayList<Turista>();
	}

	public String getTitulacion() {
		return titulacion;
	}

	public void setTitulacion(String titulacion) {
		this.titulacion = titulacion;
	}

	public int getAñosExperiencia() {
		return añosExperiencia;
	}

	public void setAñosExperiencia(int añosExperiencia) {
		this.añosExperiencia = añosExperiencia;
	}

	public ArrayList<Turista> getTuristas() {
		return turistas;
	}

	public void setTuristas(ArrayList<Turista> turistas) {
		this.turistas = turistas;
	}

	@Override
	public String toString() {
		return "Guia [titulacion=" + titulacion + ", añosExperiencia=" + añosExperiencia + ", turistas=" + turistas
				+ ", id=" + id + ", nombre=" + nombre + ", apellidos=" + apellidos + "]";
	}
	
	public void cargarTuristas(String filename) {
		File f= new File(filename);
		String cadena = "";
		String[] linea;
		int cont = 0;
		try {
			Scanner entrada= new Scanner(f);
			cadena=entrada.nextLine();
			while(entrada.hasNext()) {
				cadena = entrada.nextLine();
				linea = cadena.split(";");
				if(this.id.equals(linea[0])) {
					if(cont==0) {
						cont++;
					}else {
					this.turistas.add(new Turista(linea[1],linea[2],linea[3],linea[6],linea[7]));
					}
				}
			}
			entrada.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	public void imprimirEntradas() {
		DateTimeFormatter fechaFormato=DateTimeFormatter.ofPattern("EEEE dd-MMMM-yyyy HH:mm:ss");
		LocalDateTime hoyAhora=LocalDateTime.now();
		String fecha=hoyAhora.format(fechaFormato);
		PrintWriter salida ;
		for(Turista t: this.getTuristas())
		try {
			salida = new PrintWriter(new File(this.id+"/Entrada"+t.id+".txt"));
			salida.println("Visita guiada a la Alhambra y al Generalife");
			salida.println("Fecha y hora de la impresion: "+fecha);
			salida.println("");
			salida.println("Guía titulado: "+this.nombre+" "+this.apellidos);
			salida.println("Nº Entrada: "+t.id);
			salida.println(t.nombre+" "+t.apellidos);

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
